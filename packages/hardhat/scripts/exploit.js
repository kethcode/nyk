require("dotenv").config();

const fs = require("fs");
const path = require("path");
const console = require("console");
const ethers = require("ethers");

const kharacterContractAddress = "0x4f0e47B94c8A01234b56dc49065D3760efbf9339";
const kharacterContractAbi = [
  "function ownerOf(uint256 id) public view returns (address owner)",
  "function exploit(uint256 id, string[] calldata picks) public returns (bool)",
];

const lockContractAbi = ["function desc() public view returns (string)"];

const provider = new ethers.providers.WebSocketProvider(
  process.env.RPC_KEY_WSS
);

const wallet = new ethers.Wallet(process.env.GOERLI_PRIVATE_KEY, provider);

const kharacterContract = new ethers.Contract(
  kharacterContractAddress,
  kharacterContractAbi,
  provider
);

const connectedContract = kharacterContract.connect(wallet);

async function main() {
  if (process.argv.length <= 2) {
    console.log("syntax: node exploit <tokenId> [pick, {pick, ...}]");
    process.exit(2);
  }

  console.log(
    "Attempting to pick locks installed on ",
    await connectedContract.ownerOf(process.argv[2])
  );

  let picks = [];
  for (let i = 3; i < process.argv.length; i++) {
    picks.push(process.argv[i].toString());
  }

  //   console.log(picks);
  let success;
  try {
    success = await connectedContract.exploit(process.argv[2], picks);
  } catch (e) {
    console.log("Exploit Failed.");
    process.exit(1);
  }

  if (success) {
    console.log("System Breached\n10 Kredits Received.");
  }
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.log(error);
    process.exit(1);
  });
